version: '3.8'

services:
  cv-to-osc:
    build: .
    container_name: cv_to_osc_converter
    restart: unless-stopped
    
    # Network configuration
    network_mode: host
    
    # Volume mounts for persistence
    volumes:
      - ./configs:/app/configs
      - ./logs:/app/logs
      - ./custom-config.json:/app/config.json:ro
    
    # Environment variables
    environment:
      - OSC_HOST=${OSC_HOST:-127.0.0.1}
      - OSC_PORT=${OSC_PORT:-9000}
      - UPDATE_INTERVAL=${UPDATE_INTERVAL:-10}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    
    # Audio device access (for systems with audio hardware)
    devices:
      - /dev/snd:/dev/snd
    
    # Privileges for audio access
    privileged: false
    cap_add:
      - SYS_NICE  # For real-time audio processing
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '1.0'
        reservations:
          memory: 64M
          cpus: '0.25'
    
    # Health check
    healthcheck:
      test: ["CMD", "pgrep", "cv_to_osc_converter"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Optional: OSC monitor for debugging
  osc-monitor:
    image: alpine:latest
    container_name: osc_monitor
    profiles: ["debug"]
    command: |
      sh -c "
        apk add --no-cache netcat-openbsd &&
        echo 'OSC Monitor listening on port 9000...' &&
        nc -ul 9000
      "
    ports:
      - "9000:9000/udp"
    depends_on:
      - cv-to-osc

  # Optional: Performance monitoring
  performance-monitor:
    image: alpine:latest
    container_name: cv_performance_monitor
    profiles: ["monitor"]
    volumes:
      - ./logs:/logs:ro
    command: |
      sh -c "
        apk add --no-cache curl &&
        while true; do
          echo '=== CV to OSC Performance Monitor ===' &&
          echo 'Container stats:' &&
          echo 'Memory usage:' && cat /sys/fs/cgroup/memory/memory.usage_in_bytes 2>/dev/null || echo 'N/A' &&
          echo 'CPU usage: (check Docker stats)' &&
          echo 'Logs:' && tail -n 5 /logs/performance.log 2>/dev/null || echo 'No performance logs found' &&
          echo '=====================================' &&
          sleep 60
        done
      "
    depends_on:
      - cv-to-osc
